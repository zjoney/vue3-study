import * as _vue_compiler_sfc from '@vue/compiler-sfc';
import { SFCScriptBlock } from '@vue/compiler-sfc';
import { Node, CallExpression, ObjectExpression } from '@babel/types';

declare function isCallOf(node: Node | null | undefined, test: string | ((id: string) => boolean)): node is CallExpression;
declare const parseSFC: (code: string, id: string) => _vue_compiler_sfc.SFCDescriptor;
declare const filterMarco: (scriptSetup: SFCScriptBlock) => CallExpression[];
declare function checkInvalidScopeReference(node: Node | undefined, method: string, scriptSetup: SFCScriptBlock): void;
declare const hasPropsOrEmits: (node: ObjectExpression) => boolean;

export { checkInvalidScopeReference, filterMarco, hasPropsOrEmits, isCallOf, parseSFC };
